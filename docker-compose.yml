version: "3"

services:

  db:
      image: postgres:14-alpine
      ports:
          - "5433:5432"
      env_file:
           - .env

  app:
    build: .
    command:
      sh -c "python3 manage.py wait_for_db &&
            python3 manage.py migrate &&
            python3 manage.py loaddata fixture_data.json &&
            python3 manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./:/app
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - db
      - redis

  redis:
    image: redis:latest
    ports:
      - "6379:6379"

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    command: >
      sh -c "python manage.py wait_for_db && 
            celery -A library_app worker -l INFO"
    depends_on:
      - app
      - redis
      - db
    restart: on-failure
    env_file:
      - .env

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    command: >
      sh -c "python manage.py wait_for_db && 
            celery -A library_app beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler"
    depends_on:
      - app
      - redis
      - db
    restart: on-failure
    env_file:
      - .env

  flower:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5555:5555"
    command: >
      sh -c "python manage.py wait_for_db &&
            celery -A library_app flower --address=0.0.0.0"
    depends_on:
      - celery
      - celery-beat
      - db
    env_file:
      - .env
